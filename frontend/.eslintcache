[{"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/index.js":"1","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/App.js":"2","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/reportWebVitals.js":"3","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Utils/useOutsideClick.js":"4","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Gorcery-Viewer/grocery_viewer.js":"5","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Login/login.js":"6","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Employee-Viewer/employee_viewer.js":"7","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Grocery-Item/grocery_item.js":"8","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Editable-Item/editable-item.js":"9"},{"size":549,"mtime":1610213408971,"results":"10","hashOfConfig":"11"},{"size":1884,"mtime":1610327433814,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609964403355,"results":"13","hashOfConfig":"11"},{"size":494,"mtime":1610296386256,"results":"14","hashOfConfig":"11"},{"size":4602,"mtime":1610305251119,"results":"15","hashOfConfig":"11"},{"size":1325,"mtime":1610323295262,"results":"16","hashOfConfig":"11"},{"size":2851,"mtime":1610322808248,"results":"17","hashOfConfig":"11"},{"size":2243,"mtime":1610319332213,"results":"18","hashOfConfig":"11"},{"size":3645,"mtime":1610317882144,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1na7d4s",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/index.js",[],["40","41"],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/App.js",["42","43","44"],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/reportWebVitals.js",[],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Utils/useOutsideClick.js",[],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Gorcery-Viewer/grocery_viewer.js",["45","46"],"import React, { useState, useEffect }  from \"react\";\nimport Grocery_Item from '../Grocery-Item/grocery_item';\nimport { Row, Col,Table, Button} from 'react-bootstrap';\nimport './grocery_viewer.css';\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Grocery_Viewer() {\n    \n    const [itemList, setItemList] = useState([]);\n    const [addNew, setAddNew] = useState(false)\n    const [error, setError] = useState(\"\")\n\n    //pulls latest data from DB and refreshes itemlist\n    const refreshList = () => {\n        axios.get(\"http://127.0.0.1:8000/api/grocery_items/\")\n             .then(response => {setItemList(response.data);})\n             .catch(err => setError(\"Unable to access inventory data. \" + err))\n      };\n\n    //adds new item to DB and resets view\n    const addItem = itemData => {\n                                axios.post(\"http://127.0.0.1:8000/api/grocery_items/\", itemData)\n                                    .then(response => {\n                                        if (response.status === 201)\n                                            {setAddNew(false);\n                                            refreshList();\n                                            setError(\"\");\n                                        } else {\n                                            setError(\"Something unexpected happened. Error code: \" + response.status + response.statusText);\n                                            refreshList();\n                                        }})\n                                    .catch(err => {\n                                        setError(\"Unable to add item. \" + err);\n                                        refreshList();})\n                                    }\n\n\n    //gets item data from DB on first load\n    useEffect(() => refreshList(), [])\n\n    //deletes item from inventory\n    const deleteItem = (id) => {\n        axios.delete(`http://localhost:8000/api/grocery_items/${id}`)\n            .then(response => {\n                if (response.status === 204){\n                    refreshList();\n                    setError(\"\");\n                } else {\n                    setError(\"Something unexpected happened. Error code: \" + response.status + response.statusText);\n                    refreshList();\n                }})\n                .catch(err => {\n                    setError(\"Unable to delete item. \" + err);\n                    refreshList();})\n    }\n\n    //updates item in inventory\n    const updateItem = (item) => {\n        axios.put(`http://localhost:8000/api/grocery_items/${item.id}/`, item)\n             .then(response => { if\n                (response.status === 200) {\n                    refreshList();  \n                    setError(\"\");   \n            } else {\n                setError(\"Something unexpected happened. Error code: \" + response.status + response.statusText);\n                refreshList();\n            }})\n            .catch(err => {\n                setError(\"Unable to update item. \" + err);\n                refreshList();})\n    }\n\n \n    return ( \n        <div>\n            <Row className=\"grocery-header \">\n                <Col className=\"error\">{error}</Col>\n                <Col><Button className=\"addButton float-right\" onClick={() => setAddNew(true)}> Add Item <FontAwesomeIcon className=\"plus\" icon={faPlusSquare} /></Button></Col>\n            </Row>\n            <Table bordered hover size=\"sm\" className='item-viewer' >\n                <thead className='headings'>\n                    <tr>\n                    <th></th>\n                    <th> ID </th>\n                    <th> Name </th>\n                    <th> Quantity </th>\n                    <th> Location </th>\n                    <th> Taxable </th>\n                    <th> Status </th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {addNew && \n                <Grocery_Item name=\"\" quantity=\"0\" location=\"Pantry\" taxable=\"false\" status=\"Full\" addItem={addItem}></Grocery_Item>\n                }    \n                {itemList.map(item => {\n                    return <Grocery_Item name={item.name} quantity={item.quantity} location={item.location} taxable={item.taxable} status={item.status} id={item.id} key={item.id} deleteItem={deleteItem} updateItem={updateItem} refreshList={refreshList}></Grocery_Item>\n                })}\n                </tbody>\n            </Table>\n        </div>\n        \n        \n    )\n}\n\nexport default Grocery_Viewer","/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Login/login.js",[],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Employee-Viewer/employee_viewer.js",["47","48"],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Grocery-Item/grocery_item.js",["49","50"],"/Users/Jacqueline/Documents/grocery_inventory_management/frontend/src/Components/Editable-Item/editable-item.js",["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":21,"column":32,"nodeType":"59","messageId":"60","endLine":21,"endColumn":53},{"ruleId":"61","severity":1,"message":"62","line":49,"column":7,"nodeType":"63","endLine":49,"endColumn":25},{"ruleId":"61","severity":1,"message":"64","line":52,"column":7,"nodeType":"63","endLine":52,"endColumn":23},{"ruleId":"61","severity":1,"message":"65","line":98,"column":17,"nodeType":"63","endLine":98,"endColumn":118},{"ruleId":"61","severity":1,"message":"65","line":101,"column":28,"nodeType":"63","endLine":101,"endColumn":254},{"ruleId":"66","severity":1,"message":"67","line":2,"column":14,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"70","line":46,"column":11,"nodeType":"68","messageId":"69","endLine":46,"endColumn":21},{"ruleId":"66","severity":1,"message":"71","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":33},{"ruleId":"61","severity":1,"message":"72","line":25,"column":13,"nodeType":"63","endLine":25,"endColumn":307},{"ruleId":"73","severity":1,"message":"74","line":48,"column":37,"nodeType":"75","messageId":"76","endLine":48,"endColumn":39},{"ruleId":"73","severity":1,"message":"74","line":52,"column":62,"nodeType":"75","messageId":"76","endLine":52,"endColumn":64},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react/jsx-pascal-case","Imported JSX component Employee_Viewer must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Grocery_Viewer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Grocery_Item must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'changeView' is assigned a value but never used.","'useRef' is defined but never used.","Imported JSX component Editable_Item must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]